{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","playerName","setplayerName","playerStats","setplayerStats","value","pointsValue","setpointsValue","assistsValue","setassistsValue","reboundsValue","setreboundsValue","stealsValue","setstealsValue","blocksValue","setblocksValue","turnoversValue","setturnoversValue","fgmValue","setfgmValue","fgaValue","setfgaValue","ftmValue","setftmValue","ftaValue","setftaValue","useStyles","makeStyles","theme","container","display","item1","marginLeft","text","alignContent","marginRight","topContainer","flexDirection","root","margin","spacing","getPlayerId","playerId","console","log","axios","get","split","join","then","a","res","undefined","data","alert","length","getPlayerStats","id","catch","err","classes","className","onSubmit","e","preventDefault","TextField","label","type","onChange","event","target","placeholder","Button","variant","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3efccb79.chunk.js","sourcesContent":["import React, {useState} from 'react';\n// import NavBar from \"./Components/NavBar\"\nimport axios from \"axios\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button} from '@material-ui/core';\n\nconst App = () => {\n\n  const [playerName, setplayerName] = useState(null)\n  const [playerStats, setplayerStats] = useState({})\n  const [value] = useState()\n  const [pointsValue, setpointsValue] = useState()\n  const [assistsValue, setassistsValue] = useState()\n  const [reboundsValue, setreboundsValue] = useState()\n  const [stealsValue, setstealsValue] = useState()\n  const [blocksValue, setblocksValue] = useState()\n  const [turnoversValue, setturnoversValue] = useState()\n  const [fgmValue, setfgmValue] = useState()\n  const [fgaValue, setfgaValue] = useState()\n  const [ftmValue, setftmValue] = useState()\n  const [ftaValue, setftaValue] = useState()\n\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: \"flex\",\n    },\n\n    item1: {\n      marginLeft: \"200px\"\n    },\n\n    text: {\n      alignContent: 'center', \n      display: \"inline-block\",\n      marginLeft: \"10px\",\n      marginRight: \"10px\",\n    },\n    topContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n\n    },\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        display: \"inline-block\"\n      },\n    },\n  }));\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(playerName)\n    if (!playerName || playerName.length < 1) {\n      alert(\"Please type player's name!\")\n    } \n    else {\n      getPlayerId()\n    }\n  }\n\n  const handleChange = (event) => {\n    setplayerName(event.target.value)\n    \n  }\n\n  const getPlayerId = (playerId) => {\n    console.log(playerId)\n    axios.get(`https://www.balldontlie.io/api/v1/players?search=${playerName.split(\" \").join(\"_\")}`)\n    .then(async res => {\n    if(res.data.data[0] === undefined){\n      alert(\"This player is either injured or hasn't played yet!\")\n    } else if(res.data.data.length > 1){\n      alert(\"Pleases specify the name more!\")\n      } else{\n        await getPlayerStats(res.data.data[0].id)\n        }\n      }).catch(err => {\n        console.log(err)\n      })\n    }\n\n    // const geteFG = () => {\n      // this.setState({testing:(this.state.playerStats[\"fgm\"] + (0.5 * this.state.playerStats[\"fg3m\"])) / (this.state.playerStats[\"fga\"])})\n    //   setTesting(playerStats[\"fgm\"] + (0.5 * playerStats[\"fg3m\"])) / (playerStats[\"fga\"])\n    // }\n\n  const getPlayerStats = (playerId) => {\n    axios.get(`https://www.balldontlie.io/api/v1/season_averages?season=2020&player_ids[]=${playerId}`)\n    .then(async res => {\n      console.log(res.data.data)\n      setplayerStats(res.data.data[0])\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  const classes = useStyles();  \n\n  return (\n    <div>\n      <div>\n        <div>\n          NBA Stats App\n        </div>\n        <div className = {classes.topContainer}>\n          <div>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label = \"Player Name\"\n                type=\"text\"\n                value={value}\n                onChange={handleChange}\n                placeholder=\"please enter players name\"\n                className = {classes.text}\n              />\n              <br/>\n              <TextField\n                label = \"Points Worth\"\n                type=\"text\"\n                value={pointsValue}\n                onChange={(event) => { setpointsValue(event.target.value) }}\n                placeholder=\"Points Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"Assists Worth\"\n                type=\"text\"\n                value={assistsValue}\n                onChange={(event) => { setassistsValue(event.target.value) }}\n                placeholder=\"Assists Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"Rebounds Worth\"\n                type=\"text\"\n                value={reboundsValue}\n                onChange={(event) => { setreboundsValue(event.target.value) }}\n                placeholder=\"Rebounds Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"Steals Worth\"\n                type=\"text\"\n                value={stealsValue}\n                onChange={(event) => { setstealsValue(event.target.value) }}\n                placeholder=\"Steals Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"Blocks Worth\"\n                type=\"text\"\n                value={blocksValue}\n                onChange={(event) => { setblocksValue(event.target.value) }}\n                placeholder=\"Blocks Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"Turnovers Worth\"\n                type=\"text\"\n                value={turnoversValue}\n                onChange={(event) => { setturnoversValue(event.target.value) }}\n                placeholder=\"Turnovers Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"FGM Worth\"\n                type=\"text\"\n                value={fgmValue}\n                onChange={(event) => { setfgmValue(event.target.value) }}\n                placeholder=\"FGM Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"FGA Worth\"\n                type=\"text\"\n                value={fgaValue}\n                onChange={(event) => { setfgaValue(event.target.value) }}\n                placeholder=\"FGA Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"FTM Worth\"\n                type=\"text\"\n                value={ftmValue}\n                onChange={(event) => { setftmValue(event.target.value) }}\n                placeholder=\"FTM Worth\"\n                className = {classes.text}\n              />\n              <TextField\n                label = \"FTA Worth\"\n                type=\"text\"\n                value={ftaValue}\n                onChange={(event) => { setftaValue(event.target.value) }}\n                placeholder=\"FTA Worth\"\n                className = {classes.text}\n              />\n              <div className={classes.root}>\n                <Button \n                  variant=\"contained\" \n                  type=\"submit\" \n                  value=\"Submit\" \n                  color=\"primary\" \n                >Submit</Button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className = {classes.container}>\n          <div>\n            Points: {playerStats[\"pts\"]}\n            <br />\n            Rebounds: {playerStats[\"reb\"]}\n            <br />\n            Assists: {playerStats[\"ast\"]}\n            <br />\n            Steals: {playerStats[\"stl\"]}\n            <br />\n            Blocks: {playerStats[\"blk\"]}\n            <br />\n            Turnovers: {playerStats[\"turnover\"]}\n            <br />\n            Field Goals Made: {playerStats[\"fgm\"]}\n            <br />\n            Field Goals Attempted: {playerStats[\"fga\"]}\n            <br />\n            Free Throws Made: {playerStats[\"ftm\"]}\n            <br/>\n            Free Throws Attempted: {playerStats[\"fta\"]}\n            <br/>\n            Shooting Percentages\n            <br/>\n            Field Goal Percentage: {playerStats[\"fg_pct\"]}\n            <br/>\n            Three Point Field Goal Percentage: {playerStats[\"fg3_pct\"]}\n            <br/>\n            Free Throw Percentage: {playerStats[\"ft_pct\"]}\n            <br/> \n          </div>\n          <div className = {classes.item1}>\n            Fantasy Points: \n            \n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}