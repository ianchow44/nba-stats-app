{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleSubmit","e","preventDefault","console","log","state","playerName","length","alert","getPlayerId","handleChange","event","replace","target","value","split","join","setState","axios","get","then","a","res","undefined","data","getPlayerStats","id","catch","err","geteFG","testing","playerStats","playerId","onSubmit","this","type","onChange","placeholder","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA0HeA,E,kDApHb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAQVC,aAAe,SAACC,GACdA,EAAEC,iBACFC,QAAQC,IAAI,EAAKC,MAAMC,aAClB,EAAKD,MAAMC,YAAc,EAAKD,MAAMC,WAAWC,OAAS,EAC3DC,MAAM,8BAGN,EAAKC,eAhBW,EAqBpBC,aAAe,SAACC,GACd,IAAMC,EAAUD,EAAME,OAAOC,MAAMC,MAAM,KAAKC,KAAK,KAChDJ,EAAQL,OAAS,GAClB,EAAKU,SAAS,CAACX,WAAYM,KAxBX,EAiClBH,YAAc,WACZS,IAAMC,IAAN,2DAA8D,EAAKd,MAAMC,aACxEc,KADD,+BAAAC,EAAA,MACM,WAAMC,GAAN,SAAAD,EAAA,8DAEoBE,IAArBD,EAAIE,KAAKA,KAAK,GAFb,gBAGFhB,MAAM,uDAHJ,4BAIMc,EAAIE,KAAKA,KAAKjB,OAAS,GAJ7B,gBAKFC,MAAM,kCALJ,wCAOI,EAAKiB,eAAeH,EAAIE,KAAKA,KAAK,GAAGE,IAPzC,4CADN,uDAWGC,OAAM,SAAAC,GACPzB,QAAQC,IAAIwB,OA9CE,EAkDlBC,OAAS,WACP,EAAKZ,SAAS,CAACa,SAAS,EAAKzB,MAAM0B,YAAX,IAAiC,GAAM,EAAK1B,MAAM0B,YAAX,MAAoC,EAAK1B,MAAM0B,YAAX,OAnDnF,EAsDlBN,eAAiB,SAACO,GAChBd,IAAMC,IAAN,qFAAwFa,IACvFZ,KADD,+BAAAC,EAAA,MACM,WAAMC,GAAN,SAAAD,EAAA,sDACJlB,QAAQC,IAAIkB,EAAIE,KAAKA,MACrB,EAAKP,SAAS,CAAEc,YAAaT,EAAIE,KAAKA,KAAK,KAC3C,EAAKK,SAHD,2CADN,uDAKGF,OAAM,SAAAC,GACPzB,QAAQC,IAAIwB,OA3Dd,EAAKvB,MAAM,CACTC,WAAY,KACZyB,YAAa,GACbD,QAAS,MALK,E,0CAiElB,WACA,OACE,gCACE,+CAGD,uBAAMG,SAAUC,KAAKlC,aAArB,UACE,yCAEE,uBACCmC,KAAK,OACLrB,MAAOoB,KAAK7B,MAAMS,MAClBsB,SAAUF,KAAKxB,aACf2B,YAAY,iCAGf,uBAAOF,KAAK,SAASrB,MAAM,cAd9B,WAgBUoB,KAAK7B,MAAM0B,YAAX,IACT,uBAjBD,aAkBYG,KAAK7B,MAAM0B,YAAX,IACX,uBAnBD,YAoBWG,KAAK7B,MAAM0B,YAAX,IACV,uBArBD,WAsBUG,KAAK7B,MAAM0B,YAAX,IACT,uBAvBD,WAwBUG,KAAK7B,MAAM0B,YAAX,IACT,uBAzBD,cA0BaG,KAAK7B,MAAM0B,YAAX,SACZ,uBA3BD,qBA4BoBG,KAAK7B,MAAM0B,YAAX,IACnB,uBA7BD,0BA8ByBG,KAAK7B,MAAM0B,YAAX,IACxB,uBA/BD,qBAgCoBG,KAAK7B,MAAM0B,YAAX,IACnB,uBAjCD,0BAkCyBG,KAAK7B,MAAM0B,YAAX,IACxB,sDAnCD,0BAsCyBG,KAAK7B,MAAM0B,YAAX,OACxB,uBAvCD,sCAwCqCG,KAAK7B,MAAM0B,YAAX,QACpC,uBAzCD,0BA0CyBG,KAAK7B,MAAM0B,YAAX,OACxB,uBA3CD,oCA4CmCG,KAAK7B,MAAMyB,e,GAhHhCQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6cbbb7d9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      playerName: null,\n      playerStats: {},\n      testing: null\n    }\n  }\n\nhandleSubmit = (e) => {\n  e.preventDefault();\n  console.log(this.state.playerName)\n  if (!this.state.playerName || this.state.playerName.length < 1) {\n    alert(\"Please type player's name!\")\n  } \n  else {\n    this.getPlayerId()\n    \n  }\n}\n\nhandleChange = (event) => {\n  const replace = event.target.value.split(\" \").join(\"_\");\n  if(replace.length > 0){\n    this.setState({playerName: replace})\n  } \n}\n\n// calculateFG = () => {\n//   const eFG = (this.state.playerStats[\"fgm\"] + (0.5 * this.state.playerStats[\"fg3m\"])) / this.state.playerStats[\"fga\"]\n//   console.log(eFG)\n// }\n\n  getPlayerId = () => {\n    axios.get(`https://www.balldontlie.io/api/v1/players?search=${this.state.playerName}`)\n    .then(async res => {\n      // console.log(res.data.data)\n      if(res.data.data[0] === undefined){\n        alert(\"This player is either injured or hasn't played yet!\")\n      } else if(res.data.data.length > 1){\n        alert(\"Pleases specify the name more!\")\n      } else{\n        await this.getPlayerStats(res.data.data[0].id)\n\n      }\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  geteFG = () => {\n    this.setState({testing:(this.state.playerStats[\"fgm\"] + (0.5 * this.state.playerStats[\"fg3m\"])) / (this.state.playerStats[\"fga\"])})\n  }\n\n  getPlayerStats = (playerId) => {\n    axios.get(`https://www.balldontlie.io/api/v1/season_averages?season=2020&player_ids[]=${playerId}`)\n    .then(async res => {\n      console.log(res.data.data)\n      this.setState({ playerStats: res.data.data[0]})\n      this.geteFG()\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n  \n  render(){\n  return (\n    <div>\n      <h1>\n        NBA Stats App\n      </h1>\n     <form onSubmit={this.handleSubmit}>\n       <label>\n         Name\n         <input \n          type=\"text\"\n          value={this.state.value}\n          onChange={this.handleChange}\n          placeholder=\"please enter players name\"\n         />\n       </label>\n       <input type=\"submit\" value=\"Submit\"/>\n     </form>\n     Points: {this.state.playerStats[\"pts\"]}\n     <br />\n     Rebounds: {this.state.playerStats[\"reb\"]}\n     <br />\n     Assists: {this.state.playerStats[\"ast\"]}\n     <br />\n     Steals: {this.state.playerStats[\"stl\"]}\n     <br />\n     Blocks: {this.state.playerStats[\"blk\"]}\n     <br />\n     Turnovers: {this.state.playerStats[\"turnover\"]}\n     <br />\n     Field Goals Made: {this.state.playerStats[\"fgm\"]}\n     <br />\n     Field Goals Attempted: {this.state.playerStats[\"fga\"]}\n     <br />\n     Free Throws Made: {this.state.playerStats[\"ftm\"]}\n     <br/>\n     Free Throws Attempted: {this.state.playerStats[\"fta\"]}\n     <h2>\n       Shooting Percentages\n     </h2>\n     Field Goal Percentage: {this.state.playerStats[\"fg_pct\"]}\n     <br/>\n     Three Point Field Goal Percentage: {this.state.playerStats[\"fg3_pct\"]}\n     <br/>\n     Free Throw Percentage: {this.state.playerStats[\"ft_pct\"]}\n     <br/>\n     Effective Field Goal Percentage: {this.state.testing}\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}